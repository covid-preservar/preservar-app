doctype 5
html lang="#{I18n.locale}"
  head
    = csrf_meta_tags
    = csp_meta_tag

    meta charset="UTF-8"
    meta name='viewport' content="initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"

    = stylesheet_link_tag 'homepage', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_pack_tag 'application', 'data-turbolinks-track': 'reload'
    = favicon_link_tag image_path('favicon/favicon-96x96.png'), type: 'image/png', sizes:'96x96'
    = favicon_link_tag image_path('favicon/favicon-32x32.png'), type: 'image/png', sizes:'32x32'
    = favicon_link_tag image_path('favicon/favicon-16x16.png'), type: 'image/png', sizes:'16x16'
    = favicon_link_tag image_path('favicon/apple-icon-precomposed.png'), type: 'image/png', rel: 'apple-touch-icon-precomposed'

    - if Rails.env.production? && ENV['GOOGLE_ANALYTICS_ID'].present?
      script async='async' src="https://www.googletagmanager.com/gtag/js?id=#{ENV['GOOGLE_ANALYTICS_ID']}"
      meta id='google-analytics-id' data-value=ENV['GOOGLE_ANALYTICS_ID']

    - set_meta_tags canonical: "https://#{ENV['HOSTNAME']}#{request.path}",
                    description: 'O Preserve tem como missão ajudar a contrariar as quebras de receita dos negócios locais. Com o Preserve, estes negócios podem vender vouchers e gerar receitas imediatas, ajudando a manter a sua atividade e postos de trabalho.',
                    og: { type: 'website',
                          description: :description,
                          image: 'https://assets.preserve.pt/social/banner.jpg'},
                    twitter: { card: :summary_large_image,
                               image: 'https://assets.preserve.pt/social/banner.jpg',
                               description: :description },
                    fb: { pages: '101214354878043'}

    = display_meta_tags site: 'Preserve', og: { url: :canonical}

  body class="#{body_class} #{yield (:body_class)}"
    .spinner-wrapper.spinner--stopped
      .spinner-overlay
        .spinner

    = yield :header
    = render 'shared/flashes'
    = content_for?(:content) ? yield(:content) : yield
    = content_for?(:footer) ? yield(:footer) : render('shared/footer')

    - if ENV['HOSTNAME'] == 'test.preserve.pt'
      = render 'shared/test_flag'

    = Gon::Base.render_data