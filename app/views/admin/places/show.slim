/ # Show
/
/ This view is the template for the show page.
/ It renders the attributes of a resource,
/ as well as a link to its edit page.
/
/ ## Local variables:
/
/ - `page`:
/   An instance of [Administrate::Page::Show][1].
/   Contains methods for accessing the resource to be displayed on the page,
/   as well as helpers for describing how each attribute of the resource
/   should be displayed.
/
/ [1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Show


- content_for(:title) { t("administrate.actions.show_resource", name: page.page_title) }

header.main-content__header role="banner"
  h1.main-content__page-title
    = content_for(:title)
  div
    = link_to(t("administrate.actions.edit_resource", name: page.page_title),
        [:edit, namespace, page.resource],
        class: "button",
      ) if valid_action?(:edit) && show_action?(:edit, page.resource)
    - if page.resource.partnership.present?
      = link_to 'Edit partnership', [:edit, namespace, page.resource.partnership], class: 'button'
    - else
      = link_to 'Add partnership', new_admin_partnership_path(place_id: page.resource.id), class: 'button'

    - if page.resource.can_publish?
      = button_to 'Publish', publish_admin_place_path(page.resource), class: "button", method: :patch
    - if page.resource.published?
      = button_to 'Unpublish', unpublish_admin_place_path(page.resource), class: "button", method: :patch
section.main-content__body
  dl
    dt#photo.attribute-label
      | Photo
    dd.attribute-data
      - if page.resource.main_photo.present?
        = image_tag page.resource.photo_url(:small)
        br
        => link_to 'Small photo', page.resource.main_photo_url(:small, public: true), target: '_blank'
        ' |
        = link_to 'Large photo', page.resource.main_photo_url(:large, public: true), target: '_blank'
    - page.attributes.reject{|attr| attr.name == 'main_photo_data'}.each do |attribute|
      dt.attribute-label id="#{attribute.name}"
        = t("helpers.label.#{resource_name}.#{attribute.name}",
            default: attribute.name.titleize)
      dd class=("attribute-data attribute-data--#{attribute.html_class}")
        = render_field attribute, page: page
