header.mt-4
  h1
    | Stats

section.stats_section
  h2.subtitle Totais
  table.table
    tbody
      tr
        td
          strong Vouchers (# Vendidos / Valor Total)
        td
          => Voucher.total_paid.count
          ' /
          = number_to_currency Voucher.total_paid.sum(:value), locale: :pt
      tr
        td
          strong Locais (Total / Publicados)
        td
          => Place.count
          ' /
          = Place.published.count

      tr
        td
          strong Comerciantes (Total / Publicados)
        td
          => Seller.count
          ' /
          = Seller.where(id: Place.published.select(:seller_id)).distinct.count

section.stats_section
  h2.subtitle Partner stats
  - Partner.all.each do |partner|
    p.subtitle = partner.name
    table.table
      tbody
        tr
          td
            strong Locais (Total / Publicados)
          td
            => partner.places.published.count
            ' /
            = partner.places.count
        tr
          td
            strong Numero de vouchers
          td
            = partner.vouchers.total_paid.count
        - if partner&.target_value&.present?
          tr
            td
              strong Valor dos bonus
            td
              => number_to_currency partner.target_progress, locale: :pt, precision: 0
              ' /
              = number_to_currency partner.target_value, locale: :pt, precision: 0
          tr
            td
              strong Valor total (inc. bonus)
            td
              => number_to_currency partner.vouchers.total_paid.sum(:value) + partner.target_progress, locale: :pt, precision: 0

  p.subtitle MBWay
  table.table
    tbody
      tr
        td
          strong Numero de vouchers
        td
          = Voucher.total_paid.where.not(mbway_bonus: 0).count
      tr
        td
          strong Valor dos bonus
        td
          => number_to_currency Voucher.total_paid.sum(:mbway_bonus), locale: :pt, precision: 0
          ' /
          = number_to_currency Voucher::MBWAY_TARGET_VALUE, locale: :pt, precision: 0
      tr
        td
          strong Valor total (inc. bonus)
        td
          => number_to_currency Voucher.total_paid.where.not(mbway_bonus: 0).sum(:value) + Voucher.total_paid.sum(:mbway_bonus), locale: :pt, precision: 0

  p.subtitle Ageas
  table.table
    tbody
      tr
        td
          strong Numero de vouchers segurados
        td
          = Voucher.with_insurance.count
      tr
        td
          strong Valor segurado
        td
          => number_to_currency Voucher.with_insurance.sum(:value), locale: :pt, precision: 0

section.stats_section
  h2.subtitle Voucher Stats
  table.table
    thead
      th Date
      th Vouchers Paid
      th Amount
    tbody
      - @voucher_stats.reverse_each do |day, stats|
        tr
          td = day
          td = stats.first
          td = number_to_currency stats.last, locale: :pt

section.stats_section
  h2.subtitle Seller Stats
  table.table
    thead
      th Date
      th Sellers
      th Published
    tbody
      - @seller_stats.reverse_each do |day, stats|
        tr
          td = day
          td = stats.first
          td = stats.last
